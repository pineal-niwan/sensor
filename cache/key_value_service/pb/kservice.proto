syntax = "proto3";

package pb;

import "google/protobuf/empty.proto";

//string key
message MsgStringKey {
    string key = 1;
}

//int64 key
message MsgInt64Key {
    int64 key = 1;
}

//value
message MsgValue {
    bool ok = 1;
    bytes value = 2;
}

//string key - value
message MsgStringKeyValue {
    string key = 1;
    bytes value = 2;
}

//int64 key - value
message MsgInt64KeyValue {
    int64 key = 1;
    bytes value = 2;
}

//string key - value - timeout
message MsgStringKeyValueTimeout {
    int64 timeout = 1;
    string key = 2;
    bytes value = 3;
}

//int64 key - value - timeout
message MsgInt64KeyValueTimeout {
    int64 timeout = 1;
    int64 key = 2;
    bytes value = 3;
}

//string key - timeout
message MsgStringKeyTimeout {
    int64 timeout = 1;
    string key = 2;
}

//int64 key - timeout
message MsgInt64KeyTimeout {
    int64 timeout = 1;
    int64  key = 2;
}

//长度
message MsgLen {
    int32 hashLen = 1;
    int32 listLen = 2;
}

//以string为key的key-value service
service StringKeyValueService {
    //设置缓存
    rpc Set (MsgStringKeyValue) returns (google.protobuf.Empty);
    //设置缓存-带超时
    rpc SetWithTimeout (MsgStringKeyValueTimeout) returns (google.protobuf.Empty);
    //获取缓存
    rpc Get (MsgStringKey) returns (MsgValue);
    //获取缓存后刷新
    rpc GetThenRefresh (MsgStringKeyTimeout) returns (MsgValue);
    //获取缓存长度
    rpc GetLen (google.protobuf.Empty) returns (MsgLen);
    //清空缓存
    rpc Clear (google.protobuf.Empty) returns (google.protobuf.Empty);
}

//以int64为key的key-value service
service Int64KeyValueService {
    //设置缓存
    rpc Set (MsgInt64KeyValue) returns (google.protobuf.Empty);
    //设置缓存-带超时
    rpc SetWithTimeout (MsgInt64KeyValueTimeout) returns (google.protobuf.Empty);
    //获取缓存
    rpc Get (MsgInt64Key) returns (MsgValue);
    //获取缓存后刷新
    rpc GetThenRefresh (MsgInt64KeyTimeout) returns (MsgValue);
    //获取缓存长度
    rpc GetLen (google.protobuf.Empty) returns (MsgLen);
    //清空缓存
    rpc Clear (google.protobuf.Empty) returns (google.protobuf.Empty);
}